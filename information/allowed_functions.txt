printf	man 3 printf	<stdio.h>	write output to stdout
malloc	man malloc	<stdlib.h>	allocate dynamic memory
free	man 3 free	<stdlib.h>	free dynamic memory
read	man 2 read	<unistd.h>	read from a file descriptor
write	man 2 write	<unistd.h>	write to a file descriptor
open	man 2 open	<fcntl.h>	open and possibly create a file
close	man 2 open	<unistd.h>	close a file descriptor
fork	man fork	<unistd.h>	create a child process
wait	man wait	<sys/wait.h>	wait for process to change state
waitpid	man waitpid	<sys/wait.h>	wait for process to change state
exit	man exit	<stdlib.h>	cause normal process termination
execve	man execve	<unistd.h>	execute program
dup	man dup	<unistd.h>	duplicate a file descriptor
dup2	man dup2	<unistd.h>	duplicate a file descriptor
pipe	man pipe	<unistd.h>	create pipe
strerror	man strerror	<string.h>	return string describing error number
errno	man errno	<errno.h>	number of last error
access	man access	<unistd.h>	checks the access permissions
perror	man perror	<stdio.h>	look up the error message string corresponding to an error